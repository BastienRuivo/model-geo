# GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug)
  base_config = debug
  shader_kit_config = debug
  shader_kit_debug_config = debug
  image_viewer_config = debug
  tuto1_config = debug
  tuto2_config = debug
  tuto3_config = debug
  tuto4_config = debug
  tuto5_config = debug
  tuto6_config = debug
  tuto7_config = debug
  tuto7_camera_config = debug
  tuto_transformations_config = debug
  tuto_transformations_camera_config = debug
  tuto_transformations_lookat_config = debug
  tuto_decal_config = debug
  tuto_shadows_config = debug
  tuto_deferred_decal_config = debug
  tuto8_config = debug
  tuto9_config = debug
  tuto9_materials_config = debug
  tuto9_groups_config = debug
  tuto9_texture1_config = debug
  tuto9_textures_config = debug
  tuto9_buffers_config = debug
  tuto10_config = debug
  tuto_pad_config = debug
  tuto1GL_config = debug
  tuto2GL_config = debug
  tuto2GL_app_config = debug
  tuto3GL_config = debug
  tuto3GL_reflect_config = debug
  tuto4GL_config = debug
  tuto4GL_normals_config = debug
  tuto5GL_config = debug
  tuto5GL_sampler_config = debug
  tuto5GL_samplers_config = debug
  tuto5GL_multi_config = debug
  tuto_draw_cubemap_config = debug
  tuto_cubemap_config = debug
  tuto_dynamic_cubemap_config = debug
  tuto6GL_config = debug
  tuto6GL_buffer_config = debug
  tuto_framebuffer_config = debug
  tuto_uniform_buffers_config = debug
  tuto_storage_config = debug
  tuto_storage_buffer_config = debug
  tuto_storage_texture_config = debug
  min_data_config = debug
  tuto_vertex_compute_config = debug
  tuto_rayons_config = debug
  tuto_englobant_config = debug
  tuto_bvh_config = debug
  tuto_bvh2_config = debug
  tuto_bvh2_gltf_config = debug
  tuto_bvh2_gltf_brdf_config = debug
  tuto_ray_gltf_config = debug
  tuto_time_config = debug
  tuto_mdi_config = debug
  tuto_mdi_count_config = debug
  tuto_stream_config = debug
  tuto_is_config = debug
  tuto_raytrace_fragment_config = debug
  tuto_raytrace_compute_config = debug
  tuto_histogram1_compute_config = debug
  tuto_histogram2_compute_config = debug
  tuto_histogram_compute_config = debug
  tuto_read_buffer_config = debug
  tuto_count_buffer_config = debug
  tuto_compute_buffer_config = debug
  tuto_compute_image_config = debug
  bench_config = debug
  benchv2_config = debug
  benchv3_config = debug
  bench_filter_config = debug
  bench_trace_config = debug
  bench_scene_config = debug
  bench_setup_config = debug
  gltf_config = debug
  simple_gltf_config = debug
  tp_config = debug
  tpImplicite_config = debug
endif
ifeq ($(config),release)
  base_config = release
  shader_kit_config = release
  shader_kit_debug_config = release
  image_viewer_config = release
  tuto1_config = release
  tuto2_config = release
  tuto3_config = release
  tuto4_config = release
  tuto5_config = release
  tuto6_config = release
  tuto7_config = release
  tuto7_camera_config = release
  tuto_transformations_config = release
  tuto_transformations_camera_config = release
  tuto_transformations_lookat_config = release
  tuto_decal_config = release
  tuto_shadows_config = release
  tuto_deferred_decal_config = release
  tuto8_config = release
  tuto9_config = release
  tuto9_materials_config = release
  tuto9_groups_config = release
  tuto9_texture1_config = release
  tuto9_textures_config = release
  tuto9_buffers_config = release
  tuto10_config = release
  tuto_pad_config = release
  tuto1GL_config = release
  tuto2GL_config = release
  tuto2GL_app_config = release
  tuto3GL_config = release
  tuto3GL_reflect_config = release
  tuto4GL_config = release
  tuto4GL_normals_config = release
  tuto5GL_config = release
  tuto5GL_sampler_config = release
  tuto5GL_samplers_config = release
  tuto5GL_multi_config = release
  tuto_draw_cubemap_config = release
  tuto_cubemap_config = release
  tuto_dynamic_cubemap_config = release
  tuto6GL_config = release
  tuto6GL_buffer_config = release
  tuto_framebuffer_config = release
  tuto_uniform_buffers_config = release
  tuto_storage_config = release
  tuto_storage_buffer_config = release
  tuto_storage_texture_config = release
  min_data_config = release
  tuto_vertex_compute_config = release
  tuto_rayons_config = release
  tuto_englobant_config = release
  tuto_bvh_config = release
  tuto_bvh2_config = release
  tuto_bvh2_gltf_config = release
  tuto_bvh2_gltf_brdf_config = release
  tuto_ray_gltf_config = release
  tuto_time_config = release
  tuto_mdi_config = release
  tuto_mdi_count_config = release
  tuto_stream_config = release
  tuto_is_config = release
  tuto_raytrace_fragment_config = release
  tuto_raytrace_compute_config = release
  tuto_histogram1_compute_config = release
  tuto_histogram2_compute_config = release
  tuto_histogram_compute_config = release
  tuto_read_buffer_config = release
  tuto_count_buffer_config = release
  tuto_compute_buffer_config = release
  tuto_compute_image_config = release
  bench_config = release
  benchv2_config = release
  benchv3_config = release
  bench_filter_config = release
  bench_trace_config = release
  bench_scene_config = release
  bench_setup_config = release
  gltf_config = release
  simple_gltf_config = release
  tp_config = release
  tpImplicite_config = release
endif

PROJECTS := base shader_kit shader_kit_debug image_viewer tuto1 tuto2 tuto3 tuto4 tuto5 tuto6 tuto7 tuto7_camera tuto_transformations tuto_transformations_camera tuto_transformations_lookat tuto_decal tuto_shadows tuto_deferred_decal tuto8 tuto9 tuto9_materials tuto9_groups tuto9_texture1 tuto9_textures tuto9_buffers tuto10 tuto_pad tuto1GL tuto2GL tuto2GL_app tuto3GL tuto3GL_reflect tuto4GL tuto4GL_normals tuto5GL tuto5GL_sampler tuto5GL_samplers tuto5GL_multi tuto_draw_cubemap tuto_cubemap tuto_dynamic_cubemap tuto6GL tuto6GL_buffer tuto_framebuffer tuto_uniform_buffers tuto_storage tuto_storage_buffer tuto_storage_texture min_data tuto_vertex_compute tuto_rayons tuto_englobant tuto_bvh tuto_bvh2 tuto_bvh2_gltf tuto_bvh2_gltf_brdf tuto_ray_gltf tuto_time tuto_mdi tuto_mdi_count tuto_stream tuto_is tuto_raytrace_fragment tuto_raytrace_compute tuto_histogram1_compute tuto_histogram2_compute tuto_histogram_compute tuto_read_buffer tuto_count_buffer tuto_compute_buffer tuto_compute_image bench benchv2 benchv3 bench_filter bench_trace bench_scene bench_setup gltf simple_gltf tp tpImplicite

.PHONY: all clean help $(PROJECTS) 

all: $(PROJECTS)

base:
ifneq (,$(base_config))
	@echo "==== Building base ($(base_config)) ===="
	@${MAKE} --no-print-directory -C . -f base.make config=$(base_config)
endif

shader_kit:
ifneq (,$(shader_kit_config))
	@echo "==== Building shader_kit ($(shader_kit_config)) ===="
	@${MAKE} --no-print-directory -C . -f shader_kit.make config=$(shader_kit_config)
endif

shader_kit_debug:
ifneq (,$(shader_kit_debug_config))
	@echo "==== Building shader_kit_debug ($(shader_kit_debug_config)) ===="
	@${MAKE} --no-print-directory -C . -f shader_kit_debug.make config=$(shader_kit_debug_config)
endif

image_viewer:
ifneq (,$(image_viewer_config))
	@echo "==== Building image_viewer ($(image_viewer_config)) ===="
	@${MAKE} --no-print-directory -C . -f image_viewer.make config=$(image_viewer_config)
endif

tuto1:
ifneq (,$(tuto1_config))
	@echo "==== Building tuto1 ($(tuto1_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto1.make config=$(tuto1_config)
endif

tuto2:
ifneq (,$(tuto2_config))
	@echo "==== Building tuto2 ($(tuto2_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto2.make config=$(tuto2_config)
endif

tuto3:
ifneq (,$(tuto3_config))
	@echo "==== Building tuto3 ($(tuto3_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto3.make config=$(tuto3_config)
endif

tuto4:
ifneq (,$(tuto4_config))
	@echo "==== Building tuto4 ($(tuto4_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto4.make config=$(tuto4_config)
endif

tuto5:
ifneq (,$(tuto5_config))
	@echo "==== Building tuto5 ($(tuto5_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto5.make config=$(tuto5_config)
endif

tuto6:
ifneq (,$(tuto6_config))
	@echo "==== Building tuto6 ($(tuto6_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto6.make config=$(tuto6_config)
endif

tuto7:
ifneq (,$(tuto7_config))
	@echo "==== Building tuto7 ($(tuto7_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto7.make config=$(tuto7_config)
endif

tuto7_camera:
ifneq (,$(tuto7_camera_config))
	@echo "==== Building tuto7_camera ($(tuto7_camera_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto7_camera.make config=$(tuto7_camera_config)
endif

tuto_transformations:
ifneq (,$(tuto_transformations_config))
	@echo "==== Building tuto_transformations ($(tuto_transformations_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto_transformations.make config=$(tuto_transformations_config)
endif

tuto_transformations_camera:
ifneq (,$(tuto_transformations_camera_config))
	@echo "==== Building tuto_transformations_camera ($(tuto_transformations_camera_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto_transformations_camera.make config=$(tuto_transformations_camera_config)
endif

tuto_transformations_lookat:
ifneq (,$(tuto_transformations_lookat_config))
	@echo "==== Building tuto_transformations_lookat ($(tuto_transformations_lookat_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto_transformations_lookat.make config=$(tuto_transformations_lookat_config)
endif

tuto_decal:
ifneq (,$(tuto_decal_config))
	@echo "==== Building tuto_decal ($(tuto_decal_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto_decal.make config=$(tuto_decal_config)
endif

tuto_shadows:
ifneq (,$(tuto_shadows_config))
	@echo "==== Building tuto_shadows ($(tuto_shadows_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto_shadows.make config=$(tuto_shadows_config)
endif

tuto_deferred_decal:
ifneq (,$(tuto_deferred_decal_config))
	@echo "==== Building tuto_deferred_decal ($(tuto_deferred_decal_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto_deferred_decal.make config=$(tuto_deferred_decal_config)
endif

tuto8:
ifneq (,$(tuto8_config))
	@echo "==== Building tuto8 ($(tuto8_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto8.make config=$(tuto8_config)
endif

tuto9:
ifneq (,$(tuto9_config))
	@echo "==== Building tuto9 ($(tuto9_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto9.make config=$(tuto9_config)
endif

tuto9_materials:
ifneq (,$(tuto9_materials_config))
	@echo "==== Building tuto9_materials ($(tuto9_materials_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto9_materials.make config=$(tuto9_materials_config)
endif

tuto9_groups:
ifneq (,$(tuto9_groups_config))
	@echo "==== Building tuto9_groups ($(tuto9_groups_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto9_groups.make config=$(tuto9_groups_config)
endif

tuto9_texture1:
ifneq (,$(tuto9_texture1_config))
	@echo "==== Building tuto9_texture1 ($(tuto9_texture1_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto9_texture1.make config=$(tuto9_texture1_config)
endif

tuto9_textures:
ifneq (,$(tuto9_textures_config))
	@echo "==== Building tuto9_textures ($(tuto9_textures_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto9_textures.make config=$(tuto9_textures_config)
endif

tuto9_buffers:
ifneq (,$(tuto9_buffers_config))
	@echo "==== Building tuto9_buffers ($(tuto9_buffers_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto9_buffers.make config=$(tuto9_buffers_config)
endif

tuto10:
ifneq (,$(tuto10_config))
	@echo "==== Building tuto10 ($(tuto10_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto10.make config=$(tuto10_config)
endif

tuto_pad:
ifneq (,$(tuto_pad_config))
	@echo "==== Building tuto_pad ($(tuto_pad_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto_pad.make config=$(tuto_pad_config)
endif

tuto1GL:
ifneq (,$(tuto1GL_config))
	@echo "==== Building tuto1GL ($(tuto1GL_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto1GL.make config=$(tuto1GL_config)
endif

tuto2GL:
ifneq (,$(tuto2GL_config))
	@echo "==== Building tuto2GL ($(tuto2GL_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto2GL.make config=$(tuto2GL_config)
endif

tuto2GL_app:
ifneq (,$(tuto2GL_app_config))
	@echo "==== Building tuto2GL_app ($(tuto2GL_app_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto2GL_app.make config=$(tuto2GL_app_config)
endif

tuto3GL:
ifneq (,$(tuto3GL_config))
	@echo "==== Building tuto3GL ($(tuto3GL_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto3GL.make config=$(tuto3GL_config)
endif

tuto3GL_reflect:
ifneq (,$(tuto3GL_reflect_config))
	@echo "==== Building tuto3GL_reflect ($(tuto3GL_reflect_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto3GL_reflect.make config=$(tuto3GL_reflect_config)
endif

tuto4GL:
ifneq (,$(tuto4GL_config))
	@echo "==== Building tuto4GL ($(tuto4GL_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto4GL.make config=$(tuto4GL_config)
endif

tuto4GL_normals:
ifneq (,$(tuto4GL_normals_config))
	@echo "==== Building tuto4GL_normals ($(tuto4GL_normals_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto4GL_normals.make config=$(tuto4GL_normals_config)
endif

tuto5GL:
ifneq (,$(tuto5GL_config))
	@echo "==== Building tuto5GL ($(tuto5GL_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto5GL.make config=$(tuto5GL_config)
endif

tuto5GL_sampler:
ifneq (,$(tuto5GL_sampler_config))
	@echo "==== Building tuto5GL_sampler ($(tuto5GL_sampler_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto5GL_sampler.make config=$(tuto5GL_sampler_config)
endif

tuto5GL_samplers:
ifneq (,$(tuto5GL_samplers_config))
	@echo "==== Building tuto5GL_samplers ($(tuto5GL_samplers_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto5GL_samplers.make config=$(tuto5GL_samplers_config)
endif

tuto5GL_multi:
ifneq (,$(tuto5GL_multi_config))
	@echo "==== Building tuto5GL_multi ($(tuto5GL_multi_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto5GL_multi.make config=$(tuto5GL_multi_config)
endif

tuto_draw_cubemap:
ifneq (,$(tuto_draw_cubemap_config))
	@echo "==== Building tuto_draw_cubemap ($(tuto_draw_cubemap_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto_draw_cubemap.make config=$(tuto_draw_cubemap_config)
endif

tuto_cubemap:
ifneq (,$(tuto_cubemap_config))
	@echo "==== Building tuto_cubemap ($(tuto_cubemap_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto_cubemap.make config=$(tuto_cubemap_config)
endif

tuto_dynamic_cubemap:
ifneq (,$(tuto_dynamic_cubemap_config))
	@echo "==== Building tuto_dynamic_cubemap ($(tuto_dynamic_cubemap_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto_dynamic_cubemap.make config=$(tuto_dynamic_cubemap_config)
endif

tuto6GL:
ifneq (,$(tuto6GL_config))
	@echo "==== Building tuto6GL ($(tuto6GL_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto6GL.make config=$(tuto6GL_config)
endif

tuto6GL_buffer:
ifneq (,$(tuto6GL_buffer_config))
	@echo "==== Building tuto6GL_buffer ($(tuto6GL_buffer_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto6GL_buffer.make config=$(tuto6GL_buffer_config)
endif

tuto_framebuffer:
ifneq (,$(tuto_framebuffer_config))
	@echo "==== Building tuto_framebuffer ($(tuto_framebuffer_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto_framebuffer.make config=$(tuto_framebuffer_config)
endif

tuto_uniform_buffers:
ifneq (,$(tuto_uniform_buffers_config))
	@echo "==== Building tuto_uniform_buffers ($(tuto_uniform_buffers_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto_uniform_buffers.make config=$(tuto_uniform_buffers_config)
endif

tuto_storage:
ifneq (,$(tuto_storage_config))
	@echo "==== Building tuto_storage ($(tuto_storage_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto_storage.make config=$(tuto_storage_config)
endif

tuto_storage_buffer:
ifneq (,$(tuto_storage_buffer_config))
	@echo "==== Building tuto_storage_buffer ($(tuto_storage_buffer_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto_storage_buffer.make config=$(tuto_storage_buffer_config)
endif

tuto_storage_texture:
ifneq (,$(tuto_storage_texture_config))
	@echo "==== Building tuto_storage_texture ($(tuto_storage_texture_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto_storage_texture.make config=$(tuto_storage_texture_config)
endif

min_data:
ifneq (,$(min_data_config))
	@echo "==== Building min_data ($(min_data_config)) ===="
	@${MAKE} --no-print-directory -C . -f min_data.make config=$(min_data_config)
endif

tuto_vertex_compute:
ifneq (,$(tuto_vertex_compute_config))
	@echo "==== Building tuto_vertex_compute ($(tuto_vertex_compute_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto_vertex_compute.make config=$(tuto_vertex_compute_config)
endif

tuto_rayons:
ifneq (,$(tuto_rayons_config))
	@echo "==== Building tuto_rayons ($(tuto_rayons_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto_rayons.make config=$(tuto_rayons_config)
endif

tuto_englobant:
ifneq (,$(tuto_englobant_config))
	@echo "==== Building tuto_englobant ($(tuto_englobant_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto_englobant.make config=$(tuto_englobant_config)
endif

tuto_bvh:
ifneq (,$(tuto_bvh_config))
	@echo "==== Building tuto_bvh ($(tuto_bvh_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto_bvh.make config=$(tuto_bvh_config)
endif

tuto_bvh2:
ifneq (,$(tuto_bvh2_config))
	@echo "==== Building tuto_bvh2 ($(tuto_bvh2_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto_bvh2.make config=$(tuto_bvh2_config)
endif

tuto_bvh2_gltf:
ifneq (,$(tuto_bvh2_gltf_config))
	@echo "==== Building tuto_bvh2_gltf ($(tuto_bvh2_gltf_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto_bvh2_gltf.make config=$(tuto_bvh2_gltf_config)
endif

tuto_bvh2_gltf_brdf:
ifneq (,$(tuto_bvh2_gltf_brdf_config))
	@echo "==== Building tuto_bvh2_gltf_brdf ($(tuto_bvh2_gltf_brdf_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto_bvh2_gltf_brdf.make config=$(tuto_bvh2_gltf_brdf_config)
endif

tuto_ray_gltf:
ifneq (,$(tuto_ray_gltf_config))
	@echo "==== Building tuto_ray_gltf ($(tuto_ray_gltf_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto_ray_gltf.make config=$(tuto_ray_gltf_config)
endif

tuto_time:
ifneq (,$(tuto_time_config))
	@echo "==== Building tuto_time ($(tuto_time_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto_time.make config=$(tuto_time_config)
endif

tuto_mdi:
ifneq (,$(tuto_mdi_config))
	@echo "==== Building tuto_mdi ($(tuto_mdi_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto_mdi.make config=$(tuto_mdi_config)
endif

tuto_mdi_count:
ifneq (,$(tuto_mdi_count_config))
	@echo "==== Building tuto_mdi_count ($(tuto_mdi_count_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto_mdi_count.make config=$(tuto_mdi_count_config)
endif

tuto_stream:
ifneq (,$(tuto_stream_config))
	@echo "==== Building tuto_stream ($(tuto_stream_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto_stream.make config=$(tuto_stream_config)
endif

tuto_is:
ifneq (,$(tuto_is_config))
	@echo "==== Building tuto_is ($(tuto_is_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto_is.make config=$(tuto_is_config)
endif

tuto_raytrace_fragment:
ifneq (,$(tuto_raytrace_fragment_config))
	@echo "==== Building tuto_raytrace_fragment ($(tuto_raytrace_fragment_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto_raytrace_fragment.make config=$(tuto_raytrace_fragment_config)
endif

tuto_raytrace_compute:
ifneq (,$(tuto_raytrace_compute_config))
	@echo "==== Building tuto_raytrace_compute ($(tuto_raytrace_compute_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto_raytrace_compute.make config=$(tuto_raytrace_compute_config)
endif

tuto_histogram1_compute:
ifneq (,$(tuto_histogram1_compute_config))
	@echo "==== Building tuto_histogram1_compute ($(tuto_histogram1_compute_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto_histogram1_compute.make config=$(tuto_histogram1_compute_config)
endif

tuto_histogram2_compute:
ifneq (,$(tuto_histogram2_compute_config))
	@echo "==== Building tuto_histogram2_compute ($(tuto_histogram2_compute_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto_histogram2_compute.make config=$(tuto_histogram2_compute_config)
endif

tuto_histogram_compute:
ifneq (,$(tuto_histogram_compute_config))
	@echo "==== Building tuto_histogram_compute ($(tuto_histogram_compute_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto_histogram_compute.make config=$(tuto_histogram_compute_config)
endif

tuto_read_buffer:
ifneq (,$(tuto_read_buffer_config))
	@echo "==== Building tuto_read_buffer ($(tuto_read_buffer_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto_read_buffer.make config=$(tuto_read_buffer_config)
endif

tuto_count_buffer:
ifneq (,$(tuto_count_buffer_config))
	@echo "==== Building tuto_count_buffer ($(tuto_count_buffer_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto_count_buffer.make config=$(tuto_count_buffer_config)
endif

tuto_compute_buffer:
ifneq (,$(tuto_compute_buffer_config))
	@echo "==== Building tuto_compute_buffer ($(tuto_compute_buffer_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto_compute_buffer.make config=$(tuto_compute_buffer_config)
endif

tuto_compute_image:
ifneq (,$(tuto_compute_image_config))
	@echo "==== Building tuto_compute_image ($(tuto_compute_image_config)) ===="
	@${MAKE} --no-print-directory -C . -f tuto_compute_image.make config=$(tuto_compute_image_config)
endif

bench:
ifneq (,$(bench_config))
	@echo "==== Building bench ($(bench_config)) ===="
	@${MAKE} --no-print-directory -C . -f bench.make config=$(bench_config)
endif

benchv2:
ifneq (,$(benchv2_config))
	@echo "==== Building benchv2 ($(benchv2_config)) ===="
	@${MAKE} --no-print-directory -C . -f benchv2.make config=$(benchv2_config)
endif

benchv3:
ifneq (,$(benchv3_config))
	@echo "==== Building benchv3 ($(benchv3_config)) ===="
	@${MAKE} --no-print-directory -C . -f benchv3.make config=$(benchv3_config)
endif

bench_filter:
ifneq (,$(bench_filter_config))
	@echo "==== Building bench_filter ($(bench_filter_config)) ===="
	@${MAKE} --no-print-directory -C . -f bench_filter.make config=$(bench_filter_config)
endif

bench_trace:
ifneq (,$(bench_trace_config))
	@echo "==== Building bench_trace ($(bench_trace_config)) ===="
	@${MAKE} --no-print-directory -C . -f bench_trace.make config=$(bench_trace_config)
endif

bench_scene:
ifneq (,$(bench_scene_config))
	@echo "==== Building bench_scene ($(bench_scene_config)) ===="
	@${MAKE} --no-print-directory -C . -f bench_scene.make config=$(bench_scene_config)
endif

bench_setup:
ifneq (,$(bench_setup_config))
	@echo "==== Building bench_setup ($(bench_setup_config)) ===="
	@${MAKE} --no-print-directory -C . -f bench_setup.make config=$(bench_setup_config)
endif

gltf:
ifneq (,$(gltf_config))
	@echo "==== Building gltf ($(gltf_config)) ===="
	@${MAKE} --no-print-directory -C . -f gltf.make config=$(gltf_config)
endif

simple_gltf:
ifneq (,$(simple_gltf_config))
	@echo "==== Building simple_gltf ($(simple_gltf_config)) ===="
	@${MAKE} --no-print-directory -C . -f simple_gltf.make config=$(simple_gltf_config)
endif

tp:
ifneq (,$(tp_config))
	@echo "==== Building tp ($(tp_config)) ===="
	@${MAKE} --no-print-directory -C . -f tp.make config=$(tp_config)
endif

tpImplicite:
ifneq (,$(tpImplicite_config))
	@echo "==== Building tpImplicite ($(tpImplicite_config)) ===="
	@${MAKE} --no-print-directory -C . -f tpImplicite.make config=$(tpImplicite_config)
endif

clean:
	@${MAKE} --no-print-directory -C . -f base.make clean
	@${MAKE} --no-print-directory -C . -f shader_kit.make clean
	@${MAKE} --no-print-directory -C . -f shader_kit_debug.make clean
	@${MAKE} --no-print-directory -C . -f image_viewer.make clean
	@${MAKE} --no-print-directory -C . -f tuto1.make clean
	@${MAKE} --no-print-directory -C . -f tuto2.make clean
	@${MAKE} --no-print-directory -C . -f tuto3.make clean
	@${MAKE} --no-print-directory -C . -f tuto4.make clean
	@${MAKE} --no-print-directory -C . -f tuto5.make clean
	@${MAKE} --no-print-directory -C . -f tuto6.make clean
	@${MAKE} --no-print-directory -C . -f tuto7.make clean
	@${MAKE} --no-print-directory -C . -f tuto7_camera.make clean
	@${MAKE} --no-print-directory -C . -f tuto_transformations.make clean
	@${MAKE} --no-print-directory -C . -f tuto_transformations_camera.make clean
	@${MAKE} --no-print-directory -C . -f tuto_transformations_lookat.make clean
	@${MAKE} --no-print-directory -C . -f tuto_decal.make clean
	@${MAKE} --no-print-directory -C . -f tuto_shadows.make clean
	@${MAKE} --no-print-directory -C . -f tuto_deferred_decal.make clean
	@${MAKE} --no-print-directory -C . -f tuto8.make clean
	@${MAKE} --no-print-directory -C . -f tuto9.make clean
	@${MAKE} --no-print-directory -C . -f tuto9_materials.make clean
	@${MAKE} --no-print-directory -C . -f tuto9_groups.make clean
	@${MAKE} --no-print-directory -C . -f tuto9_texture1.make clean
	@${MAKE} --no-print-directory -C . -f tuto9_textures.make clean
	@${MAKE} --no-print-directory -C . -f tuto9_buffers.make clean
	@${MAKE} --no-print-directory -C . -f tuto10.make clean
	@${MAKE} --no-print-directory -C . -f tuto_pad.make clean
	@${MAKE} --no-print-directory -C . -f tuto1GL.make clean
	@${MAKE} --no-print-directory -C . -f tuto2GL.make clean
	@${MAKE} --no-print-directory -C . -f tuto2GL_app.make clean
	@${MAKE} --no-print-directory -C . -f tuto3GL.make clean
	@${MAKE} --no-print-directory -C . -f tuto3GL_reflect.make clean
	@${MAKE} --no-print-directory -C . -f tuto4GL.make clean
	@${MAKE} --no-print-directory -C . -f tuto4GL_normals.make clean
	@${MAKE} --no-print-directory -C . -f tuto5GL.make clean
	@${MAKE} --no-print-directory -C . -f tuto5GL_sampler.make clean
	@${MAKE} --no-print-directory -C . -f tuto5GL_samplers.make clean
	@${MAKE} --no-print-directory -C . -f tuto5GL_multi.make clean
	@${MAKE} --no-print-directory -C . -f tuto_draw_cubemap.make clean
	@${MAKE} --no-print-directory -C . -f tuto_cubemap.make clean
	@${MAKE} --no-print-directory -C . -f tuto_dynamic_cubemap.make clean
	@${MAKE} --no-print-directory -C . -f tuto6GL.make clean
	@${MAKE} --no-print-directory -C . -f tuto6GL_buffer.make clean
	@${MAKE} --no-print-directory -C . -f tuto_framebuffer.make clean
	@${MAKE} --no-print-directory -C . -f tuto_uniform_buffers.make clean
	@${MAKE} --no-print-directory -C . -f tuto_storage.make clean
	@${MAKE} --no-print-directory -C . -f tuto_storage_buffer.make clean
	@${MAKE} --no-print-directory -C . -f tuto_storage_texture.make clean
	@${MAKE} --no-print-directory -C . -f min_data.make clean
	@${MAKE} --no-print-directory -C . -f tuto_vertex_compute.make clean
	@${MAKE} --no-print-directory -C . -f tuto_rayons.make clean
	@${MAKE} --no-print-directory -C . -f tuto_englobant.make clean
	@${MAKE} --no-print-directory -C . -f tuto_bvh.make clean
	@${MAKE} --no-print-directory -C . -f tuto_bvh2.make clean
	@${MAKE} --no-print-directory -C . -f tuto_bvh2_gltf.make clean
	@${MAKE} --no-print-directory -C . -f tuto_bvh2_gltf_brdf.make clean
	@${MAKE} --no-print-directory -C . -f tuto_ray_gltf.make clean
	@${MAKE} --no-print-directory -C . -f tuto_time.make clean
	@${MAKE} --no-print-directory -C . -f tuto_mdi.make clean
	@${MAKE} --no-print-directory -C . -f tuto_mdi_count.make clean
	@${MAKE} --no-print-directory -C . -f tuto_stream.make clean
	@${MAKE} --no-print-directory -C . -f tuto_is.make clean
	@${MAKE} --no-print-directory -C . -f tuto_raytrace_fragment.make clean
	@${MAKE} --no-print-directory -C . -f tuto_raytrace_compute.make clean
	@${MAKE} --no-print-directory -C . -f tuto_histogram1_compute.make clean
	@${MAKE} --no-print-directory -C . -f tuto_histogram2_compute.make clean
	@${MAKE} --no-print-directory -C . -f tuto_histogram_compute.make clean
	@${MAKE} --no-print-directory -C . -f tuto_read_buffer.make clean
	@${MAKE} --no-print-directory -C . -f tuto_count_buffer.make clean
	@${MAKE} --no-print-directory -C . -f tuto_compute_buffer.make clean
	@${MAKE} --no-print-directory -C . -f tuto_compute_image.make clean
	@${MAKE} --no-print-directory -C . -f bench.make clean
	@${MAKE} --no-print-directory -C . -f benchv2.make clean
	@${MAKE} --no-print-directory -C . -f benchv3.make clean
	@${MAKE} --no-print-directory -C . -f bench_filter.make clean
	@${MAKE} --no-print-directory -C . -f bench_trace.make clean
	@${MAKE} --no-print-directory -C . -f bench_scene.make clean
	@${MAKE} --no-print-directory -C . -f bench_setup.make clean
	@${MAKE} --no-print-directory -C . -f gltf.make clean
	@${MAKE} --no-print-directory -C . -f simple_gltf.make clean
	@${MAKE} --no-print-directory -C . -f tp.make clean
	@${MAKE} --no-print-directory -C . -f tpImplicite.make clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug"
	@echo "  release"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   base"
	@echo "   shader_kit"
	@echo "   shader_kit_debug"
	@echo "   image_viewer"
	@echo "   tuto1"
	@echo "   tuto2"
	@echo "   tuto3"
	@echo "   tuto4"
	@echo "   tuto5"
	@echo "   tuto6"
	@echo "   tuto7"
	@echo "   tuto7_camera"
	@echo "   tuto_transformations"
	@echo "   tuto_transformations_camera"
	@echo "   tuto_transformations_lookat"
	@echo "   tuto_decal"
	@echo "   tuto_shadows"
	@echo "   tuto_deferred_decal"
	@echo "   tuto8"
	@echo "   tuto9"
	@echo "   tuto9_materials"
	@echo "   tuto9_groups"
	@echo "   tuto9_texture1"
	@echo "   tuto9_textures"
	@echo "   tuto9_buffers"
	@echo "   tuto10"
	@echo "   tuto_pad"
	@echo "   tuto1GL"
	@echo "   tuto2GL"
	@echo "   tuto2GL_app"
	@echo "   tuto3GL"
	@echo "   tuto3GL_reflect"
	@echo "   tuto4GL"
	@echo "   tuto4GL_normals"
	@echo "   tuto5GL"
	@echo "   tuto5GL_sampler"
	@echo "   tuto5GL_samplers"
	@echo "   tuto5GL_multi"
	@echo "   tuto_draw_cubemap"
	@echo "   tuto_cubemap"
	@echo "   tuto_dynamic_cubemap"
	@echo "   tuto6GL"
	@echo "   tuto6GL_buffer"
	@echo "   tuto_framebuffer"
	@echo "   tuto_uniform_buffers"
	@echo "   tuto_storage"
	@echo "   tuto_storage_buffer"
	@echo "   tuto_storage_texture"
	@echo "   min_data"
	@echo "   tuto_vertex_compute"
	@echo "   tuto_rayons"
	@echo "   tuto_englobant"
	@echo "   tuto_bvh"
	@echo "   tuto_bvh2"
	@echo "   tuto_bvh2_gltf"
	@echo "   tuto_bvh2_gltf_brdf"
	@echo "   tuto_ray_gltf"
	@echo "   tuto_time"
	@echo "   tuto_mdi"
	@echo "   tuto_mdi_count"
	@echo "   tuto_stream"
	@echo "   tuto_is"
	@echo "   tuto_raytrace_fragment"
	@echo "   tuto_raytrace_compute"
	@echo "   tuto_histogram1_compute"
	@echo "   tuto_histogram2_compute"
	@echo "   tuto_histogram_compute"
	@echo "   tuto_read_buffer"
	@echo "   tuto_count_buffer"
	@echo "   tuto_compute_buffer"
	@echo "   tuto_compute_image"
	@echo "   bench"
	@echo "   benchv2"
	@echo "   benchv3"
	@echo "   bench_filter"
	@echo "   bench_trace"
	@echo "   bench_scene"
	@echo "   bench_setup"
	@echo "   gltf"
	@echo "   simple_gltf"
	@echo "   tp"
	@echo "   tpImplicite"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"